{
  "interpreterSettings": {
    "singularity": {
      "id": "singularity",
      "name": "singularity",
      "group": "spark",
      "properties": {
        "args": "",
        "zeppelin.spark.printREPLOutput": "true",
        "spark.cores.max": "",
        "zeppelin.dep.additionalRemoteRepository": "spark-packages,http://dl.bintray.com/spark-packages/maven,false;",
        "zeppelin.spark.sql.stacktrace": "false",
        "zeppelin.spark.importImplicit": "true",
        "zeppelin.spark.concurrentSQL": "false",
        "zeppelin.spark.useHiveContext": "true",
        "zeppelin.pyspark.python": "python",
        "zeppelin.dep.localrepo": "local-repo",
        "zeppelin.R.knitr": "true",
        "zeppelin.spark.maxResult": "1000",

        "master": "spark://127.0.0.1:7077",
        "spark.app.name": "Zeppelin",
        "zeppelin.R.image.width": "100%",
        "zeppelin.R.render.options": "out.format \u003d \u0027html\u0027, comment \u003d NA, echo \u003d FALSE, results \u003d \u0027asis\u0027, message \u003d F, warning \u003d F",
        "zeppelin.R.cmd": "R"
      },
      "interpreterGroup": [
        {
          "class": "org.apache.zeppelin.spark.SparkInterpreter",
          "name": "spark"
        },
        {
          "class": "org.apache.zeppelin.spark.PySparkInterpreter",
          "name": "pyspark"
        },
        {
          "class": "org.apache.zeppelin.spark.SparkRInterpreter",
          "name": "r"
        },
        {
          "class": "org.apache.zeppelin.spark.SparkSqlInterpreter",
          "name": "sql"
        },
        {
          "class": "org.apache.zeppelin.spark.DepInterpreter",
          "name": "dep"
        }
      ],
      "dependencies": [
        {
          "groupArtifactVersion": "org.apache.hadoop:hadoop-aws:2.6.1"
        }
      ],
      "option": {
        "remote": true,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false
      }
    },

    <% ENV['DATABASE_INTERPRETER_URLS'].split(',').each do |db| %>
    <% if ENV[db]
       require 'uri'
       dburi = URI(ENV[db])
    %>

    "<%= db %>": {
      "id": "<%= db %>",
      "name": "<%= db %>",
      "group": "psql",
      "properties": {
        "postgresql.max.result": 1000,
        "postgresql.driver": "org.postgresql.Driver",
        "postgresql.user": "<%= dburi.user %>",
        "postgresql.password": "<%= dburi.password %>",
        "postgresql.url": "<%= "jdbc:postgresql://#{dburi.host}:#{dburi.port}#{dburi.path}" %>"
      },
      "interpreterGroup": [
        {
          "class": "org.apache.zeppelin.postgresql.PostgreSqlInterpreter",
          "name": "sql"
        }
      ],
      "option": {
        "remote": true
      }
    }
    <%  if ENV['DATABASE_INTERPRETER_URLS'].include?(',') && ! ENV['DATABASE_INTERPRETER_URLS'].end_with?(",#{db}") %>
  ,
    <% end %>
    <% end %>
    <% end %>
  },

  "interpreterBindings": {},
  "interpreterRepositories": [
    {
      "id": "central",
      "type": "default",
      "url": "http://repo1.maven.org/maven2/",
      "releasePolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "snapshotPolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "mirroredRepositories": [],
      "repositoryManager": false
    },
    {
      "id": "local",
      "type": "default",
      "url": "file:///app/.m2/repository",
      "releasePolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "snapshotPolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "mirroredRepositories": [],
      "repositoryManager": false
    }
  ]
}


